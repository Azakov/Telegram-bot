
/*
  val cmd = for {
    title <- ttl
    a <- timesUp
    b <- timesDown
  } yield CreatePoll(a, b)

  for {
    data <- request
    cmd <- parse(data)
    handler <- route(cmd)
    res <- handler.handle(cmd)
  } yield res

  res: Try[String]

  res match {
    case Success(res) =>v socket.write(res)
    case Failure(th) => socket.write("FAILED: "+th.getMessage)
  }

  cmd: Try[CreatePoll] */